// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phanlichphongkham.Data;

#nullable disable

namespace Phanlichphongkham.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250621135330_update_onlineform")]
    partial class update_onlineform
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phanlichphongkham.Model.DayOfTheWeek", b =>
                {
                    b.Property<int>("DayOfTheWeek_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayOfTheWeek_Id"));

                    b.Property<int>("DayOfTheWeek_Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayOfTheWeek_Id");

                    b.ToTable("DayOfTheWeeks");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.DepartmentalAppointmentScheduling", b =>
                {
                    b.Property<int>("DepartmentalAppointmentScheduling_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentalAppointmentScheduling_Id"));

                    b.Property<DateTime>("DateInWeek")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayInWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DayOfTheWeek_Id")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentHospital_Id")
                        .HasColumnType("int");

                    b.Property<int>("DoctorDepartmentHospital_Id")
                        .HasColumnType("int");

                    b.Property<int>("Doctor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Examination_Id")
                        .HasColumnType("int");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.Property<int>("Specialty_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlot_Id")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("DepartmentalAppointmentScheduling_Id");

                    b.HasIndex("DayOfTheWeek_Id");

                    b.HasIndex("Examination_Id");

                    b.HasIndex("TimeSlot_Id");

                    b.ToTable("DepartmentalAppointmentSchedulings");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Examination", b =>
                {
                    b.Property<int>("Examination_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Examination_Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Examination_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Examination_Id");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlot_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlot_Id"));

                    b.Property<int>("Examination_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeSlot_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TimeSlot_Id");

                    b.HasIndex("Examination_Id");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.DepartmentalAppointmentScheduling", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.DayOfTheWeek", "DayOfTheWeek")
                        .WithMany("AppointmentSchedules")
                        .HasForeignKey("DayOfTheWeek_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.Examination", "Examination")
                        .WithMany("AppointmentSchedules")
                        .HasForeignKey("Examination_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.TimeSlot", null)
                        .WithMany("AppointmentSchedules")
                        .HasForeignKey("TimeSlot_Id");

                    b.Navigation("DayOfTheWeek");

                    b.Navigation("Examination");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.TimeSlot", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.Examination", "Examination")
                        .WithMany("TimeSlots")
                        .HasForeignKey("Examination_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examination");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.DayOfTheWeek", b =>
                {
                    b.Navigation("AppointmentSchedules");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Examination", b =>
                {
                    b.Navigation("AppointmentSchedules");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.TimeSlot", b =>
                {
                    b.Navigation("AppointmentSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
