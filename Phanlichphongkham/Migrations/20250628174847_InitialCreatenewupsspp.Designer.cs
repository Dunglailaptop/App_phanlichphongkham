// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phanlichphongkham.Data;

#nullable disable

namespace Phanlichphongkham.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250628174847_InitialCreatenewupsspp")]
    partial class InitialCreatenewupsspp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phanlichphongkham.Model.DepartmentHospital", b =>
                {
                    b.Property<int>("DepartmentHospital_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentHospital_Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentHospital_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentHospital_id_posgres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentHospital_Id");

                    b.ToTable("DepartmentHospitals");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.DepartmentalAppointmentScheduling", b =>
                {
                    b.Property<int>("DepartmentalAppointmentScheduling_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentalAppointmentScheduling_Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInWeek")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayInWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentHospital_Id")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentalAppointmentScheduling_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doctor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Examination_Id")
                        .HasColumnType("int");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.Property<int>("Specialty_id")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("DepartmentalAppointmentScheduling_Id");

                    b.HasIndex("DepartmentHospital_Id");

                    b.HasIndex("Doctor_Id");

                    b.HasIndex("Examination_Id");

                    b.HasIndex("Room_Id");

                    b.HasIndex("Specialty_id");

                    b.ToTable("DepartmentalAppointmentSchedulings");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Doctor", b =>
                {
                    b.Property<int>("Doctor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Doctor_Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentHospital_Id")
                        .HasColumnType("int");

                    b.Property<string>("Doctor_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doctor_Id_progres")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Doctor_Id");

                    b.HasIndex("DepartmentHospital_Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Examination", b =>
                {
                    b.Property<int>("Examination_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Examination_Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Examination_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Examination_Id");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Room_Id"));

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room_id_posgres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zone_Id")
                        .HasColumnType("int");

                    b.HasKey("Room_Id");

                    b.HasIndex("Zone_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.SepcialtyJoinZone", b =>
                {
                    b.Property<int>("Zone_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Specialty_id")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Zone_Id");

                    b.HasIndex("Specialty_id");

                    b.ToTable("SepcialtyJoinZones");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Sepicalty", b =>
                {
                    b.Property<int>("Sepicalty_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sepicalty_Id"));

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("ListType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sepicalty_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sepicalty_id_posgres")
                        .HasColumnType("int");

                    b.HasKey("Sepicalty_Id");

                    b.ToTable("Sepicaltys");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.ServicePrice", b =>
                {
                    b.Property<int>("ServicePrice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicePrice_Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServicePrice_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicePrice_Id_progres")
                        .HasColumnType("int");

                    b.Property<int>("Zone_Id")
                        .HasColumnType("int");

                    b.HasKey("ServicePrice_Id");

                    b.HasIndex("Zone_Id");

                    b.ToTable("ServicePrice");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Zone", b =>
                {
                    b.Property<int>("Zone_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Zone_Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zone_Id_posgres")
                        .HasColumnType("int");

                    b.Property<string>("Zone_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Zone_Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.DepartmentalAppointmentScheduling", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.DepartmentHospital", "DepartmentHospital")
                        .WithMany("DepartmentalAppointmentScheduling")
                        .HasForeignKey("DepartmentHospital_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.Doctor", "Doctor")
                        .WithMany("DepartmentalAppointmentScheduling")
                        .HasForeignKey("Doctor_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.Examination", "Examination")
                        .WithMany("DepartmentalAppointmentScheduling")
                        .HasForeignKey("Examination_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.Room", "Room")
                        .WithMany("DepartmentalAppointmentScheduling")
                        .HasForeignKey("Room_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.Sepicalty", "Sepicalty")
                        .WithMany("DepartmentalAppointmentScheduling")
                        .HasForeignKey("Specialty_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DepartmentHospital");

                    b.Navigation("Doctor");

                    b.Navigation("Examination");

                    b.Navigation("Room");

                    b.Navigation("Sepicalty");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Doctor", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.DepartmentHospital", "DepartmentHospital")
                        .WithMany("Doctor")
                        .HasForeignKey("DepartmentHospital_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DepartmentHospital");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Room", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.Zone", "Zone")
                        .WithMany("Room")
                        .HasForeignKey("Zone_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.SepcialtyJoinZone", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.Sepicalty", "Sepicalty")
                        .WithMany("SepcialtyJoinZone")
                        .HasForeignKey("Specialty_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Phanlichphongkham.Model.Zone", "Zone")
                        .WithMany("SepcialtyJoinZone")
                        .HasForeignKey("Zone_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sepicalty");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.ServicePrice", b =>
                {
                    b.HasOne("Phanlichphongkham.Model.Zone", "Zone")
                        .WithMany("ServicePrice")
                        .HasForeignKey("Zone_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.DepartmentHospital", b =>
                {
                    b.Navigation("DepartmentalAppointmentScheduling");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Doctor", b =>
                {
                    b.Navigation("DepartmentalAppointmentScheduling");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Examination", b =>
                {
                    b.Navigation("DepartmentalAppointmentScheduling");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Room", b =>
                {
                    b.Navigation("DepartmentalAppointmentScheduling");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Sepicalty", b =>
                {
                    b.Navigation("DepartmentalAppointmentScheduling");

                    b.Navigation("SepcialtyJoinZone");
                });

            modelBuilder.Entity("Phanlichphongkham.Model.Zone", b =>
                {
                    b.Navigation("Room");

                    b.Navigation("SepcialtyJoinZone");

                    b.Navigation("ServicePrice");
                });
#pragma warning restore 612, 618
        }
    }
}
